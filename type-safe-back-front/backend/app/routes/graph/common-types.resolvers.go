package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.66

import (
	"context"
	graph "example/todoapp/app/routes/graph/generated"
	"example/todoapp/app/routes/graph/model"
	"time"

	"gorm.io/gorm"
)

// DeletedAt is the resolver for the DeletedAt field.
func (r *gorm__io___gorm__ModelResolver) DeletedAt(ctx context.Context, obj *gorm.Model) (*model.GormIoGormDeletedAt, error) {
	if obj.DeletedAt.Valid {
		return &model.GormIoGormDeletedAt{
			Time:  obj.DeletedAt.Time,
			Valid: obj.DeletedAt.Valid,
		}, nil
	} else {
		return &model.GormIoGormDeletedAt{
			Time:  time.Now().Add(24 * 30 * 12 * 100 * time.Hour),
			Valid: obj.DeletedAt.Valid,
		}, nil
	}
}

// ID is the resolver for the ID field.
func (r *gorm__io___gorm__ModelResolver) ID(ctx context.Context, obj *gorm.Model) (int32, error) {
	return int32(obj.ID), nil
}

// Gorm__io___gorm__Model returns graph.Gorm__io___gorm__ModelResolver implementation.
func (r *Resolver) Gorm__io___gorm__Model() graph.Gorm__io___gorm__ModelResolver {
	return &gorm__io___gorm__ModelResolver{r}
}

type gorm__io___gorm__ModelResolver struct{ *Resolver }
